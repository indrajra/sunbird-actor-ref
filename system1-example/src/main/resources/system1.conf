{
  # See https://doc.akka.io/docs/akka/2.5/general/configuration.html for more help
  MyFirstActorSystem {
    default-dispatcher {
      type = "Dispatcher"
      executor = "fork-join-executor"
      fork-join-executor {
        parallelism-min = 1
        parallelism-factor = 2.0
        parallelism-max = 3
      }
      # Throughput for default Dispatcher, set to 1 for as fair as possible
      throughput = 1
    }
    rr-dispatcher {
      type = "Dispatcher"
      executor = "fork-join-executor"
      fork-join-executor {
        parallelism-min = 1
        parallelism-factor = 2.0
        parallelism-max = 2
      }
      # Throughput for default Dispatcher, set to 1 for as fair as possible
      throughput = 1
    }
    rr-usr-dispatcher {
      type = "Dispatcher"
      executor = "fork-join-executor"
      fork-join-executor {
        parallelism-min = 1
        parallelism-factor = 2.0
        parallelism-max = 4
      }
      # Throughput for default Dispatcher, set to 1 for as fair as possible
      throughput = 1
    }
    akka {
      loglevel = "DEBUG"
      #loggers = ["akka.event.slf4j.Slf4jLogger"]
      log-dead-letters-during-shutdown = on
      actor {
        # Provider can be one of the following values
        # akka.actor.LocalActorRefProvider or akka.remote.RemoteActorRefProvider
        provider = "akka.remote.RemoteActorRefProvider"
        enable-additional-serialization-bindings = true
        serializers {
          proto = "akka.remote.serialization.ProtobufSerializer"
        }
        deployment {
          /Router {
              router = smallest-mailbox-pool
              nr-of-instances = 3
              dispatcher = rr-dispatcher
          }
          /SendHello {
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
          /HelloGreeter {
            # In System1 example, the helloGreeter is local. If you want this to be remote
            # uncomment the line below and set system name, IP and port as appropriate
            #remote = "akka.tcp://MySecondActorSystem@127.0.0.1:9089/user/HelloGreeter"
            router = smallest-mailbox-pool
            nr-of-instances = 2
            dispatcher = rr-usr-dispatcher
          }
          /BadGreeter {
            router = smallest-mailbox-pool
          }
        }
      }
      remote {
        maximum-payload-bytes = 30000000 bytes
        enabled-transports = ["akka.remote.netty.tcp"]
        netty.tcp {
          port = 9088
          message-frame-size = 30000000b
          send-buffer-size = 30000000b
          receive-buffer-size = 30000000b
          maximum-frame-size = 30000000b
          hostname = 127.0.0.1
        }
      }
    }
  }
}